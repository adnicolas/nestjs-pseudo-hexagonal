module.exports = {
    parser: '@typescript-eslint/parser',
    parserOptions: {
      project: 'tsconfig.json',
      tsconfigRootDir: __dirname,
      sourceType: 'module',
    },
    plugins: ['@typescript-eslint/eslint-plugin'],
    extends: [
      'plugin:@typescript-eslint/recommended'
    ],
    root: true,
    env: {
      node: true,
      jest: true,
    },
    ignorePatterns: ['.eslintrc.js'],
    rules: {
      'arrow-body-style': ['error', 'as-needed'],
      'camelcase': ['error', {
        'properties': 'always'
      }],
      'curly': ['error', 'all'],
      'default-case': 'error',
      'default-case-last': 'error',
      'default-param-last': ['error'],
      'eqeqeq': 'error',
      'grouped-accessor-pairs': ['error', 'getBeforeSet'],
      'init-declarations': ['error', 'always'],
      'max-classes-per-file': 'error',
      'max-depth': ['error', 4],
      'max-lines': ['error', {
        'max': 300,
        'skipBlankLines': true
      }],
      'max-lines-per-function': ['error', {
        'max': 55,
        'skipBlankLines': true,
        'skipComments': true
      }],
      'max-params': ['error', 3],
      'no-console': 'error',
      'no-else-return': 'error',
      'no-eq-null': 'error',
      'no-extra-boolean-cast': 'error',
      'no-extra-semi': 'error',
      'no-implicit-coercion': 'error',
      'no-lonely-if': 'error',
      'no-magic-numbers': ['error', { 'ignoreArrayIndexes': true }],
      'no-return-await': 'error',
      'no-throw-literal': 'error',
      'no-unneeded-ternary': 'error',
      'no-var': 'error',
      'prefer-arrow-callback': 'error',
      'prefer-const': 'error',
      'prefer-object-spread': 'error',
      'prefer-spread': 'error',
      'prefer-template': 'error',
      'yoda': 'error',
      'array-bracket-newline': ['error', { 'multiline': true, 'minItems': 3 }],
      'array-element-newline': ['error', { 'multiline': true, 'minItems': 3 }],
      'arrow-parens': ['error', 'always'],
      'arrow-spacing': 'error',
      'block-spacing': 'error',
      'brace-style': ['error', '1tbs', { 'allowSingleLine': true }],
      'comma-dangle': ['error', 'never'],
      'comma-spacing': ['error', { 'before': false, 'after': true }],
      'comma-style': ['error', 'last'],
      'computed-property-spacing': ['error', 'never'],
      'eol-last': ['error', 'always'],
      'func-call-spacing': ['error', 'never'],
      'function-call-argument-newline': ['error', 'consistent'],
      'indent': ['error', 'tab'],
      'keyword-spacing': ['error', { 'before': true, 'after': true }],
      'max-len': ['error', { 'code': 165, 'tabWidth': 4 }],
      'multiline-ternary': ['error', 'always-multiline'],
      'newline-per-chained-call': ['error', { 'ignoreChainWithDepth': 2 }],
      'no-mixed-spaces-and-tabs': 'error',
      'no-multi-spaces': 'error',
      'no-multiple-empty-lines': 'error',
      'no-trailing-spaces': 'error',
      'no-whitespace-before-property': 'error',
      'operator-linebreak': ['error', 'after'],
      'quotes': ['error', 'single'],
      'switch-colon-spacing': 'error',
      'template-curly-spacing': 'error'
    },
};